{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fmodern\fcharset0 Courier-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww8720\viewh12840\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 ruby -v
\f1\b0 \
muestra la versi\'f3n de ruby\
\

\f0\b print
\f1\b0 \
muestra en el interprete lo que se indica\
\

\f0\b gets
\f1\b0 \
muestra un input ( agrega una l\'ednea en blanco despu\'e9s de los datos\
\

\f0\b .chomp\

\f1\b0 elimina la l\'ednea en blanco de gets\
\

\f0\b puts\

\f1\b0 muestra en el interprete lo que se indica y se agrega una linea en blanco\
\

\f0\b #\{variable\}\

\f1\b0 muestra en el interprete lo que la variable almacena\
\

\f0\b .capitalize\

\f1\b0 procura almacenar el string con la primera letra mayuscula y las demas minusculas\
\
\
COMENTARIOS\
\

\f0\b # comentario de una l\'ednea\

\f1\b0 \

\f0\b =begin\
=end\

\f1\b0 comentario de varias l\'edneas\
\
\
CONTROL DE FLUJO\
\

\f0\b if expresion\

\f1\b0 una condicion a ejecutarse si se cumple su expresion (true)\
\

\f0\b end\

\f1\b0 le indica a ruby que la condicion ha terminado\
\

\f0\b else\

\f1\b0 si no se cumple el 
\f0\b if 
\f1\b0 entonces se debe ejecutar 
\f0\b else\
\
elsif\

\f1\b0 se ocupa si en una condicion existen m\'e1s opciones\
\

\f0\b unless\

\f1\b0 condicion que se ejecuta cuando su expresion no se cumple su expresion (false)\
\

\f0\b else\

\f1\b0 acompa\'f1a tambien a 
\f0\b unless 
\f1\b0 y permite que se ejecute la condicion si es true\
\
\
CONVERSION DE TIPOS\
\

\f0\b .to_i (to_int / estricto)\

\f1\b0 convertir un string a entero ( to integer )\
\

\f0\b .to_f\

\f1\b0 convertir a flotante ( to floating / decimal )\
\

\f0\b .to_s (to_str / estricto)\

\f1\b0 convertir a cadena de texto ( to string )\
\

\f0\b \

\f1\b0 ALCANCE DE VARIABLES\
\

\f0\b $variable\

\f1\b0 global. los experimentados evitan usarla, porque puede ser modificada en cualquier metodo y si el codigo es muy extenso no se sabria identificar\
\

\f0\b @variable\

\f1\b0 de instancia. se puede ocupar en cualquier m\'e9todo de una clase\
\

\f0\b variable\

\f1\b0 local. solo se ocupa en el metodo que fue creada.\
\
\
OPERACIONES MATEMATICAS\

\f0\b \
( )\

\f1\b0 par\'e9ntesis\
\

\f0\b n * n | n / n\

\f1\b0 multiplicacion o division de izquierda a derecha\
\

\f0\b n + n | n - n\

\f1\b0 suma o resta de izquierda a derecha\
\
\
METODOS DE CADENAS\
\

\f0\b .lenght\

\f1\b0 toma la cantidad de caracteres y lo muestra\
\

\f0\b .reverse\

\f1\b0 toma el string almacenado e invierte sus caracteres\
\

\f0\b .downcase\

\f1\b0 toma el string y lo muestra en minusculas\
\

\f0\b .upcase\

\f1\b0 toma el string y lo muestra en mayusculas\
\
\
OPERADORES BOOLEANOS\
\

\f0\b &&\

\f1\b0 y, solo da resultado 
\f0\b true 
\f1\b0 cuando las expresiones comparadas son iguales a 
\f0\b true\
\
true && true =true\
true && false =false\
false && false =false
\f1\b0 \
\

\f0\b ||\

\f1\b0 o, inclusiva, da resultado 
\f0\b true 
\f1\b0 cuando alguna expresion o todas son 
\f0\b true\
\
true || true =true\
true || false =true
\f1\b0 \

\f0\b false || false =false
\f1\b0 \
\

\f0\b !\

\f1\b0 no, convierte a 
\f0\b false 
\f1\b0 los valores 
\f0\b true 
\f1\b0 y viceversa\
\

\f0\b !true =false\
!false =true\

\f1\b0 \

\f0\b t\

\f1\b0 c}